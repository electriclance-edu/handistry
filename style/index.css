/* [LANCE]
SO, SOME NOTES:
When I program in CSS, I do not use IDs (like <p id="rat"></p>)
IDs are reserved for JavaScript usage (document.getElemById())
As such, everything is done with classes (<p class="rat"></p>)
Just googled CSS class naming schemes right now, here's something cool:
    UNIQUE CLASSES use PascalCase
        - unique classes are replacement for ids
        - meant to be only used once
        - eg. .VirtualMouseCursor
    BLOCK CLASSES use camelCase
        - block classes are classes that are meant to be reused
        - are capable of standing alone
        - eg. .chemical, .beaker, .equipment
    PARTS OF BLOCKS are prefixed with the classname of the block with a "-"
        - parts cannot stand alone without their parent block
        - eg. .chemical-tooltip, .beaker-content
    MODIFYING CLASSES also use camelCase
        - modifying classes are classes that cannot stand alone at all
        - meant to build on existing classes
        - preferably verb or adjective names
        - eg. .smallText, .centeredAbsolutely
    DEBUG/TEMPORARY CLASSES ARE PREFIXED WITH ___ (three underscores)
        - mainly for stuff that we don't want the user to see  
*/

/* 
-------------------------
IMPORTS and MEDIA QUERIES
-------------------------
*/
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Anybody:wght@500&family=Lato&display=swap');
/* 
------------
GENERAL TAGS
------------
*/
:root {
    txt-small:0.7em;
}
body {
    margin:0;
    padding:0;
    width:100vw;
    height:100vh;
    overflow:hidden;
    background-image:url("../resources/img/___chemistryLab.png");
    background-size:cover;
    background-position:center;
}
p, button, span {
    font-family:'Lato', sans-serif;
    font-size:20px;
    margin:0;
}
h1, h2, h3, h4, h5, h6 {
    font-family:'Anybody', serif;
    margin:0;
}
/* 
--------------
UNIQUE CLASSES
--------------
*/
.VirtualMouseStage {
    pointer-events:none; /*only for now*/
}
.TitleHeader {
    margin-bottom:5px;
}
.Smiley {
    position:absolute;
    bottom:-200px;
    right:-200px;
    width:1000px;
    height:500px;
}
/* 
-------------
BLOCK CLASSES
-------------
*/
.flex-row {
    display:flex;
    flex-direction:row;
    justify-content:center;
}
.tooltipContainer {
    position:relative;
}
.tooltipContainer:hover .tooltip {
    opacity:1;
}
.tooltip {
    --tooltipDist:10px;
    position:absolute;
    left:50%;
    transform:translatex(-50%);
    top:calc(100% + var(--tooltipDist));
    opacity:0;
    transition:0.2s;
}
.chemical {
    width:100px;
    height:100px;
    background-image:url("../resources/img/good.png");
    background-size:contain;
}
.chemical-tooltip {
    white-space:nowrap;
    pointer-events:none;
    user-select:none;
}
.chemical-tooltip-type {
    font-size:var(--txt-small);
    font-weight:bold;
    color:rgb(225,45,120);
}
/* 
-----------------
MODIFYING CLASSES
-----------------
*/
.styleGlassBox { /*https://hype4.academy/tools/glassmorphism-generator*/
    background-color:rgba(255,255,255, 0.55);
    box-shadow:0px 0px 5px rgba(255,255,255,0.5);
    backdrop-filter: blur(3px);
    border-radius: 10px;
    border: 1px solid rgba(220,220,220,0.9);
    padding:10px;
    color:black;
    text-shadow:0px 0px 5px white;
}
.fillsEntireScreen {
    width:100vw;
    height:100vh;
    position:absolute;
    top:0;
    left:0;
}
.absoluteCentered {
    position:absolute;
    top:50%;
    left:50%;
    transform:translate(-50%,-50%);
}
/* 
-------------
DEBUG CLASSES
-------------
*/
.___terribleIntro {
    position:absolute;
    top:50%;
    transform:translatey(-50%);
    left:100px;
}